// ---------------------------ENVIRONMENTS-----------------------------
set OldControllableActions = {initA,validateTOR, validateDSD1, validateQA, validateGF1,
							 reviewTOR, reviewDSD1, readyTOR,  readyDSD1,  readyQA, endA}
set NewControllableActions = {OldControllableActions, validateTORQA, readyTORQA}
set OldA = {OldControllableActions, receiveTOR, receiveDSD1, receiveGF1, torOk[0..1], dsd1Ok[0..1], qaOk[0..1], adjustGF1, approveGF1, cancelGF1}
set NewA = {NewControllableActions, receiveTORQA, torQaOk[0..1]}

//Environments
ASSESSMENT = (initA -> endA -> ASSESSMENT).

OLDTOR = (receiveTOR -> RECEIVED),
RECEIVED = (validateTOR -> RESPONSE | endA -> OLDTOR),
RESPONSE = (torOk[0] -> reviewTOR -> OLDTOR | torOk[1] -> readyTOR -> OLDTOR).

DSD1 = (receiveDSD1 -> RECEIVED),
RECEIVED = (validateDSD1 -> DSD1RESPONSE | endA -> DSD1),
DSD1RESPONSE = (dsd1Ok[0] -> reviewDSD1 -> DSD1 | dsd1Ok[1] -> readyDSD1 -> QA),
QA = (validateQA -> QARESPONSE),
QARESPONSE = (qaOk[0] -> reviewDSD1 -> DSD1 | qaOk[1] -> readyQA -> DSD1).

GATEFORM1 = (receiveGF1 -> RECEIVED),
RECEIVED = (validateGF1 -> GF1RESPONSE | endA -> GATEFORM1),
GF1RESPONSE = ({adjustGF1,approveGF1,cancelGF1} -> GATEFORM1).

||OldEnvironment = (ASSESSMENT || OLDTOR || DSD1 || GATEFORM1).

NEWTOR = (receiveTOR -> RECEIVED),
RECEIVED = (validateTOR -> RESPONSETOR | endA -> NEWTOR),
RESPONSETOR = (torOk[0] -> reviewTOR -> NEWTOR | torOk[1] -> readyTOR -> QA),
QA = (receiveTORQA -> validateTORQA -> QARESPONSE),
QARESPONSE = (torQaOk[1] -> readyTORQA -> NEWTOR | torQaOk[0] -> reviewTOR -> NEWTOR).

||NewEnvironment = (ASSESSMENT || NEWTOR || DSD1 || GATEFORM1).

//Fluents declaration
fluent Initiated = <initA,endA>

// TOR FLUENTS
fluent TorReceived = <receiveTOR, {endA,reviewTOR,readyTOR}>
fluent ValidatingTOR = <validateTOR,torOk[0..1]>
fluent TorDenied = <torOk[0],validateTOR>
fluent ReviewingTOR = <reviewTOR,validateTOR>
fluent TorAccepted = <torOk[1],endA>
fluent OldTORDone = <readyTOR,endA>

//DSD1 FLUENTS
fluent Dsd1Received = <receiveDSD1, {endA,reviewDSD1,readyDSD1}>
fluent ValidatingDSD1 = <validateDSD1,dsd1Ok[0..1]>
fluent Dsd1Denied = <dsd1Ok[0],validateDSD1>
fluent ReviewingDSD1 = <reviewDSD1, validateDSD1>
fluent Dsd1Accepted = <dsd1Ok[1],endA>
fluent DSD1Done = <readyDSD1,endA>
fluent ValidatingQA = <validateQA,qaOk[0..1]>
fluent QADenied = <qaOk[0],validateQA>
fluent QAAccepted = <qaOk[1],endA>
fluent QADone = <readyQA,{adjustGF1,endA}>

// GF1 FLUENTS
fluent Gf1Received = <receiveGF1, {endA,adjustGF1,approveGF1,cancelGF1}>
fluent ValidatingGF1 = <validateGF1,{adjustGF1,approveGF1,cancelGF1}>
fluent Finished = <{approveGF1,cancelGF1},initA>
fluent Adjusting = <adjustGF1,validateGF1>

// New FLUENTS
fluent ValidatingTORQA = <validateTORQA,torQaOk[0..1]>
fluent TorQaReceived = <receiveTORQA, {reviewTOR, readyTORQA}>
fluent NewTORDone = <readyTORQA, endA>

//actions fluents controllable
fluent InitA_a = <initA,OldA\{initA}>
fluent ValidateQA_a = <validateQA,OldA\{validateQA}>
fluent ValidateTOR_a = <validateTOR,OldA\{validateTOR}>
fluent ValidateDSD1_a = <validateDSD1,OldA\{validateDSD1}>
fluent ValidateGF1_a = <validateGF1,OldA\{validateGF1}>
fluent ReviewTOR_a = <reviewTOR,OldA\{reviewTOR}>
fluent ReviewDSD1_a = <reviewDSD1,OldA\{reviewDSD1}>
fluent ReadyTOR_a = <readyTOR,OldA\{readyTOR}> 
fluent ReadyDSD1_a = <readyDSD1,OldA\{readyDSD1}> 
fluent ReadyQA_a = <readyQA,OldA\{readyQA}>
fluent EndA_a = <endA,OldA\{endA}>
//action fluents uncontrollable
fluent ReceiveTOR_a = <receiveTOR,OldA\{receiveTOR}>
fluent ReceiveDSD1_a = <receiveDSD1,OldA\{receiveDSD1}>
fluent ReceiveGF1_a = <receiveGF1,OldA\{receiveGF1}>
fluent TorOk0_a = <torOk[0],OldA\{torOk[0]}>
fluent TorOk1_a = <torOk[1],OldA\{torOk[1]}>
fluent Dsd1Ok0_a = <dsd1Ok[0], OldA\{dsd1Ok[0]}>
fluent Dsd1Ok1_a = <dsd1Ok[1], OldA\{dsd1Ok[1]}>
fluent QaOk0_a = <qaOk[0], OldA\{qaOk[0]}>
fluent QaOk1_a = <qaOk[1], OldA\{qaOk[1]}>
fluent AdjustGF1_a = <adjustGF1,OldA\{adjustGF1}>
fluent ApproveGF1_a = <approveGF1, OldA\{approveGF1}>
fluent CancelGF1_a = <cancelGF1, OldA\{cancelGF1}>

// new action fluents controllable
fluent ValidateTORQA_a = <validateTORQA, NewA\{validateTORQA}>
fluent ReadyTORQA_a = <readyTORQA, NewA\{readyTORQA}>
// new action fluents uncontrollable
fluent ReceiveTORQA_a = <receiveTORQA,NewA\{receiveTORQA}>
fluent TorQaOk0_a = <torQaOk[0],NewA\{torQaOk[0]}>
fluent TorQaOk1_a = <torQaOk[1],NewA\{torQaOk[1]}>


// ---------------------------OLD CONTROLLER SPEC-----------------------------

assert INIT_POLICY = ((ValidateTOR_a || ValidateDSD1_a || ValidateGF1_a) -> Initiated)
assert OLD_TOR_POLICY = ((ValidateDSD1_a || ValidateGF1_a) -> OldTORDone)
assert QA_POLICY = (ValidateGF1_a -> QADone)
assert END_POLICY = (EndA_a -> Finished)
assert OLD_DO_NOT_SEND_TWICE = ((OldTORDone -> !ValidateTOR_a) && 
							(QADone -> !ValidateDSD1_a) && (Finished -> !ValidateGF1_a))

ltl_property P_INIT_POLICY = []INIT_POLICY
ltl_property P_OLD_TOR_POLICY = []OLD_TOR_POLICY
ltl_property P_QA_POLICY = []QA_POLICY
ltl_property P_END_POLICY = []END_POLICY
ltl_property P_OLD_DO_NOT_SEND_TWICE = []OLD_DO_NOT_SEND_TWICE

controller ||OldController = OldEnvironment~{OldSpec}.
||EnvironmentAndController = (OldEnvironment || OldController).

controllerSpec OldSpec = {
    safety = {P_INIT_POLICY, P_OLD_TOR_POLICY, P_QA_POLICY, P_END_POLICY, P_OLD_DO_NOT_SEND_TWICE}
    controllable = {OldControllableActions}
}

// ---------------------------NEW CONTROLLER SPEC-----------------------------

assert NEW_TOR_POLICY = ((ValidateDSD1_a || ValidateGF1_a) -> NewTORDone)
assert NEW_DO_NOT_SEND_TWICE = ((NewTORDone -> !ValidateTOR_a) &&
					 (QADone -> !ValidateDSD1_a) && (Finished -> !ValidateGF1_a))

ltl_property P_NEW_TOR_POLICY = []NEW_TOR_POLICY
ltl_property P_NEW_DO_NOT_SEND_TWICE = []NEW_DO_NOT_SEND_TWICE

controller ||NewController = NewEnvironment~{NewSpec}.
||NewEnvironmentAndController = (NewEnvironment || NewController).

controllerSpec NewSpec= {
    safety = {P_INIT_POLICY, P_NEW_TOR_POLICY, P_QA_POLICY, P_END_POLICY, P_NEW_DO_NOT_SEND_TWICE}
    controllable = {NewControllableActions}
}


// ---------------------------UPDATING CONTROLLER SPEC-----------------------------
//Updating controller fluents
fluent InTransition = <stopOldSpec, startNewSpec> 
fluent StopOldSpec = <stopOldSpec, beginUpdate>
fluent StartNewSpec= <startNewSpec, beginUpdate>
fluent Reconfigure = <reconfigure, beginUpdate>

//ltl_property T = ()

updatingController UpdCont = {
    oldController = EnvironmentAndController,
    oldEnvironment = OldEnvironment,
    newEnvironment = NewEnvironment,
    oldGoal = OldSpec, 
    newGoal = NewSpec,
    // T = True is executed if no transition requirement is set
	//transition = T,
	nonblocking,
	oldPropositions = {Initiated, TorReceived, ValidatingTOR, TorDenied, ReviewingTOR, TorAccepted, 
        OldTORDone, Dsd1Received, ValidatingDSD1, Dsd1Denied, ReviewingDSD1, Dsd1Accepted, DSD1Done, 
        ValidatingQA, QADone, Gf1Received, ValidatingGF1, Finished, Adjusting, ValidatingTORQA, 
        TorQaReceived, NewTORDone, QAAccepted, QADenied, ValidateTOR_a, ValidateDSD1_a, ValidateGF1_a, EndA_a}
    newPropositions = {Initiated, TorReceived, ValidatingTOR, TorDenied, ReviewingTOR, TorAccepted, 
        OldTORDone, Dsd1Received, ValidatingDSD1, Dsd1Denied, ReviewingDSD1, Dsd1Accepted, DSD1Done, 
        ValidatingQA, QADone, Gf1Received, ValidatingGF1, Finished, Adjusting, ValidatingTORQA, 
        TorQaReceived, NewTORDone, QAAccepted, QADenied, ValidateTOR_a, ValidateDSD1_a, ValidateGF1_a, EndA_a}


/*
    {Initiated, TorReceived, Dsd1Received, Gf1Received, TorQaReceived, 
			EndA_a, ValidateQA_a, ValidateTOR_a, ValidateDSD1_a, ValidateGF1_a,
        ValidatingTOR, ValidatingDSD1, ValidatingQA, ValidatingGF1, ValidatingTORQA, OldTORDone, DSD1Done, QADone, Finished}
	newPropositions = {Initiated, TorReceived, Dsd1Received, Gf1Received, TorQaReceived, 
			EndA_a, ValidateQA_a, ValidateTOR_a, ValidateDSD1_a, ValidateGF1_a,
        ValidatingTOR, ValidatingDSD1, ValidatingQA, ValidatingGF1, ValidatingTORQA, NewTORDone, DSD1Done, QADone, Finished}
    updateFluents = {Initiated, TorReceived, Dsd1Received, Gf1Received, TorQaReceived, 
        ValidatingTOR, ValidatingDSD1, ValidatingQA, ValidatingGF1, ValidatingTORQA, OldTORDone, DSD1Done, QADone, Finished, NewTORDone,
		InitA_a, ValidateQA_a, ValidateTOR_a, ValidateDSD1_a, ValidateGF1_a, ReviewTOR_a, ReviewDSD1_a,
        ReadyTOR_a, ReadyDSD1_a, ReadyQA_a, EndA_a, 
        ReceiveTOR_a, ReceiveDSD1_a, ReceiveGF1_a, 
		TorOk0_a, TorOk1_a, Dsd1Ok0_a, Dsd1Ok1_a, QaOk0_a, QaOk1_a, AdjustGF1_a, ApproveGF1_a, CancelGF1_a,
        ValidateTORQA_a, ReadyTORQA_a, ReceiveTORQA_a, TorQaOk0_a, TorQaOk1_a}
*/
}

||UPDATE_CONTROLLER = UpdCont.

// ---------------------------TEST AND RESULTS-----------------------------
assert S_OLD = (INIT_POLICY && OLD_TOR_POLICY && QA_POLICY && END_POLICY && OLD_DO_NOT_SEND_TWICE)
assert S_NEW = (INIT_POLICY && NEW_TOR_POLICY && QA_POLICY && END_POLICY && NEW_DO_NOT_SEND_TWICE)

assert TEST_FORMULA1 = [](!StopOldSpec -> S_OLD)
assert TEST_FORMULA2 = [](StartNewSpec -> S_NEW)
assert TEST_FORMULA3 = [](beginUpdate -> (<>stopOldSpec && <>startNewSpec && <>reconfigure))

