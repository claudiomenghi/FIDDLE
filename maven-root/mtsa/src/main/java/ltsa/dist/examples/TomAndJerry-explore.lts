set InRooms = {in0,in1,in2}
set CatMoves = {ce,cw,ci}
set MouseMoves = {me,mw,mi}
set CatA = {CatMoves,InRooms}
set MouseA = {MouseMoves,InRooms}
set Controllable = {CatMoves, InRooms}
set A = {MouseA, CatA}

//Concrete system. 
||CONCRETE1 = (CAT || MOUSE || MOUSE_SPEED).

CAT(Init=0) = CAT[Init],
CAT[0] = (ce->CAT[1] | ci->CAT[0] | in0->CAT[0]),
CAT[1] = (cw->CAT[0] | ce->CAT[2] | ci->CAT[1] | in1->CAT[1]),
CAT[2] = (cw->CAT[1] | ci->CAT[2] | in2->CAT[2]).

MOUSE(Init=0) = MOUSE[Init],
MOUSE[0] = (me->MOUSE[1] | mi->MOUSE[0] | in0->MOUSE[0]),
MOUSE[1] = (mw->MOUSE[0] | me->MOUSE[2] | mi->MOUSE[1] | in1->MOUSE[1]),
MOUSE[2] = (mw->MOUSE[1] | mi->MOUSE[2] | in2->MOUSE[2]).

MOUSE_SPEED = (MouseA->CAT_TURN), 
CAT_TURN = (CatA->CAT_TURN2), 
CAT_TURN2 = (CatA->MOUSE_SPEED).


//Abstract initial view of the world.
Abs1_CAT = ({ce?,cw?,ci?,in0?,in1?,in2?}->Abs1_CAT).
||Abs1 = (Abs1_CAT || Abs1_MOUSE || MOUSE_SPEED). 

set Mouse_Maybe = {me?,mw?,mi?}
Abs1_MOUSE(Init=0) = MOUSE[Init],
MOUSE[0] = ({Mouse_Maybe}->MOUSE[0] | {Mouse_Maybe}->MOUSE[1] | {Mouse_Maybe}->MOUSE[2] | in0->MOUSE[0]),
MOUSE[1] = ({Mouse_Maybe}->MOUSE[0] | {Mouse_Maybe}->MOUSE[1] | {Mouse_Maybe}->MOUSE[2] | in1->MOUSE[1]),
MOUSE[2] = ({Mouse_Maybe}->MOUSE[0] | {Mouse_Maybe}->MOUSE[1] | {Mouse_Maybe}->MOUSE[2] | in2->MOUSE[2]).

||SYSTEM1 = (Abs1_CAT || Abs1_MOUSE || CAT || MOUSE || MOUSE_SPEED).

//Exploration step1
controller ||Abs1_C = (Abs1)~{G1}.

//goal
fluent IN = <{in0,in1,in2},A\{in0,in1,in2}>

assert CAT_CAUGHT_MOUSE = IN
assert GF_CAT_CAUGHT_MOUSE = []<> IN

goal G1 = {
	guarantee = {CAT_CAUGHT_MOUSE}
	controllable = {Controllable}
}
