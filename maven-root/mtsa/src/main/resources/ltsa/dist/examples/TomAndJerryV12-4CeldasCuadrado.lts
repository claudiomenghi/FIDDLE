range Rooms = 0..3
set CatFlaps = {c01,c03,c12,c10,c21,c23,c30,c32}
set MouseFlaps = {m01,m03,m12,m10,m21,m23,m30,m32}
set Controllable = {CatFlaps, MouseFlaps}

CAT(Init=0) = (start->cat_in[Init]->CAT[Init]),
CAT[0] = (c01 -> ECAT[1] | c03 -> ECAT[3]),
CAT[1] = (c12 -> ECAT[2] | c10 -> ECAT[0]),
CAT[2] = (c23 -> ECAT[3] | c21 -> ECAT[1]),
CAT[3] = (c30 -> ECAT[0] | c32 -> ECAT[2]),
ECAT[room:Rooms] = (cat_in[room]->CAT[room]).

MOUSE(Init=1) = (start->mouse_in[Init]->MOUSE[Init]),
MOUSE[0] = (m01 -> EMOUSE[1] | m03 -> EMOUSE[3]),
MOUSE[1] = (m12 -> EMOUSE[2] | m10 -> EMOUSE[0]),
MOUSE[2] = (m23 -> EMOUSE[3] | m21 -> EMOUSE[1]),
MOUSE[3] = (m30 -> EMOUSE[0] | m32 -> EMOUSE[2]),
EMOUSE[room:Rooms] = (mouse_in[room]->MOUSE[room]).

fluent CATROOM[room:Rooms] = <cat_in[room],{cat_in[Rooms]}\{cat_in[room]}>
fluent MOUSEROOM[room:Rooms] = <mouse_in[room],{mouse_in[Rooms]}\{mouse_in[room]}>

assert MOUSE_IN_0 = MOUSEROOM[0]
assert MOUSE_IN_1 = MOUSEROOM[1]
assert CAT_IN_0 = CATROOM[0]
assert CAT_IN_1 = CATROOM[1]

assert TRUE = (MOUSE_IN_0 && !MOUSE_IN_0)

ltl_property SAFE = []( !exists[i:Rooms] (CATROOM[i] && MOUSEROOM[i]))

goal G1 = {
safety = {SAFE}
assume = {} 
guarantee = {MOUSE_IN_0, CAT_IN_0}//, MOUSE_IN_1, CAT_IN_0, CAT_IN_1}
controllable = {Controllable}
}

||Tom_Jerry = (CAT || MOUSE).
controller	||C = (Tom_Jerry)~{G1}.
||RUNLiveAndSafe = C.
||Analysed_Env = (Tom_Jerry || SAFE).

animation MAZElAs = "xml/catmousemaze.xml" target RUNLiveAndSafe  
                 actions {
                    forall[i:CatFlaps] {[i]/[i]},
					forall[i:MouseFlaps] {[i]/[i]}
                 }
                 controls {
                    cat_in[Rooms]/end,
                    mouse_in[Rooms]/mend,
                    start/start
                 }


